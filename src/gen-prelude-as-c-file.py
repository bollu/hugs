#!/usr/bin/env python3
# Generate the prelude.c file by scanning the folder pointed to by
# the FOLDER variable. It scans the files in FOLDER, and creates `const char *`
# variables with the file contents as strings. It also stores all the file names
# in an array `file_name` and the file contents in an array `file_contents`
import os
from os import listdir
from os.path import isfile, join


DOUBLEQUOTE = '"'
ESCAPEDOUBLEQUOTE = "\\" + DOUBLEQUOTE
SLASH = "\\"
ESCAPESLASH = "\\\\"
NEWLINE = '\\n'
FOLDER = "../libraries/Hugs/"
OUTFILE = "AUTOGENERATED_PRELUDE.c"

out = open(OUTFILE, "w")

class FileMetadata: 
    def __init__(self, name, path):
        self.name = name; self.path = path;

fms = [] # contains FileMetadatas
for fname in listdir(FOLDER):
    path = join(FOLDER, fname)
    print("FOLDER: %s | fname: %s | path: %s" % (FOLDER, fname, path))
    if not isfile(path): continue
    fms.append(FileMetadata(fname, path))


def escape(s): return s.replace(SLASH, ESCAPESLASH).replace(DOUBLEQUOTE, ESCAPEDOUBLEQUOTE)

def filename_to_c_var(name): return name.lower().replace(".", "_")
for fm in fms:
    f = open(fm.path, "r")
    ls = [DOUBLEQUOTE + escape(l.strip()) + NEWLINE + DOUBLEQUOTE for l in f.readlines()]
    f.close()

    out.write("\nconst char *" + filename_to_c_var(fm.name) + " = " + \
              "\n".join(ls) + ";")

out.write("\nconst char *prelude_names[] = {" + \
          ", ".join([DOUBLEQUOTE + fm.name + DOUBLEQUOTE for fm in fms]) + \
          "};\n")

out.write("\nconst char *prelude_contents[] = {" + \
          ", ".join([filename_to_c_var(fm.name) for fm in fms]) + \
          "};\n")

out.close()
